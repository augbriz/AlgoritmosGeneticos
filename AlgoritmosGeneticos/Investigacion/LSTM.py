import numpy as np                
import pandas as pd               
import matplotlib.pyplot as plt   
import warnings
warnings.filterwarnings('ignore') 
# importaci√≥n de los datos 
import yfinance as yf            
# Framework deep learning
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.optimizers import Adam, RMSprop
from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau
from tensorflow.keras.regularizers import l2

# Preprocesamiento de los datos
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error, mean_absolute_error

# --- Configuraci√≥n de TensorFlow ---
print("TensorFlow version:", tf.__version__)
print("GPU disponible:", tf.config.list_physical_devices('GPU'))

# Configurar reproducibilidad
tf.random.set_seed(42)
np.random.seed(42)

print("‚úÖ Importaciones completadas exitosamente")
print("üéØ Preparado para implementar modelo LSTM")

# =============================================================================
# CONSTANTES DEL PROYECTO
# =============================================================================

# Configuraci√≥n de datos
TICKER = "YPF"
START_DATE = "2008-01-01"
END_DATE = "2025-07-23"
NUM_DATOS = 1000  # √öltimos 1000 datos (como en an√°lisis ca√≥tico)

# Configuraci√≥n del modelo (valores base - se optimizar√°n con AG)
LOOKBACK_WINDOW = 20      # Ventana temporal: √∫ltimos 20 d√≠as para predecir
TRAIN_SPLIT = 0.7         # 70% para entrenamiento
VAL_SPLIT = 0.15          # 15% para validaci√≥n
TEST_SPLIT = 0.15         # 15% para prueba

print(f"üìä Configuraci√≥n del proyecto:")
print(f"   ‚Ä¢ Ticker: {TICKER}")
print(f"   ‚Ä¢ Datos: {NUM_DATOS} puntos hist√≥ricos")
print(f"   ‚Ä¢ Ventana temporal: {LOOKBACK_WINDOW} d√≠as")
print(f"   ‚Ä¢ Divisi√≥n: {TRAIN_SPLIT:.0%} train, {VAL_SPLIT:.0%} val, {TEST_SPLIT:.0%} test")
